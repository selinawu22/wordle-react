{"ast":null,"code":"var _jsxFileName = \"/Users/selinawu/Desktop/wordle-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  MongoClient\n} = require('mongodb');\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this));\nconst uri = \"mongodb+srv://selinawu2205:<selinawu8>@cluster0.fyjq3.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\";\nasync function connectToDB() {\n  const client = new MongoClient(uri);\n  try {\n    await client.connect();\n    console.log('connected to db');\n  } catch (e) {\n    console.error(e);\n  } finally {\n    await client.close();\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","MongoClient","require","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","uri","connectToDB","client","connect","console","log","e","error","close"],"sources":["/Users/selinawu/Desktop/wordle-react/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst {MongoClient} = require('mongodb');\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nconst uri = \"mongodb+srv://selinawu2205:<selinawu8>@cluster0.fyjq3.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\";\n\nasync function connectToDB() {\n  const client = new MongoClient(uri);\n  try {\n    await client.connect();\n    console.log('connected to db')\n  } catch (e) {\n      console.error(e);\n  } finally {\n    await client.close();\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAM;EAACC;AAAW,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAGxC,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTP,OAAA,CAACL,KAAK,CAACa,UAAU;EAAAC,QAAA,eACfT,OAAA,CAACH,GAAG;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAED,MAAMC,GAAG,GAAG,iHAAiH;AAE7H,eAAeC,WAAWA,CAAA,EAAG;EAC3B,MAAMC,MAAM,GAAG,IAAIf,WAAW,CAACa,GAAG,CAAC;EACnC,IAAI;IACF,MAAME,MAAM,CAACC,OAAO,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACRF,OAAO,CAACG,KAAK,CAACD,CAAC,CAAC;EACpB,CAAC,SAAS;IACR,MAAMJ,MAAM,CAACM,KAAK,CAAC,CAAC;EACtB;AACF;;AAEA;AACA;AACA;AACAxB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}