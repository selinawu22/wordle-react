{"ast":null,"code":"var _jsxFileName = \"/Users/selinawu/Desktop/world-react/src/components/KeypadRow.jsx\";\nimport React from 'react';\nimport Key from './Key';\nimport KeyButton from './KeyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KeypadRow({\n  keyColor,\n  setWord,\n  row\n}) {\n  let backColor = k => {\n    return keyColor[k] || 'blue';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keypadRow flex-center\",\n    children: row.map(k => k.length === 1 ? /*#__PURE__*/_jsxDEV(Key, {\n      k: k,\n      onClick: () => setWord(k),\n      color: backColor(k)\n    }, k, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(KeyButton, {\n      className: \"keyButton\",\n      onClick: () => setWord(k),\n      text: k\n    }, k, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = KeypadRow;\nexport default KeypadRow;\nvar _c;\n$RefreshReg$(_c, \"KeypadRow\");","map":{"version":3,"names":["React","Key","KeyButton","jsxDEV","_jsxDEV","KeypadRow","keyColor","setWord","row","backColor","k","className","children","map","length","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["/Users/selinawu/Desktop/world-react/src/components/KeypadRow.jsx"],"sourcesContent":["import React from 'react'\nimport Key from './Key'\nimport KeyButton from './KeyButton';\n\nfunction KeypadRow({keyColor, setWord, row}) {\n\n  let backColor = (k) => {\n    return keyColor[k] || 'blue';\n  }\n\n  return (\n    <div className='keypadRow flex-center'>\n        {row.map((k) => (k.length === 1 ? \n        <Key key={k} k={k} onClick={() => setWord(k)} color={backColor(k)}/> : \n        <KeyButton className='keyButton' onClick={() => setWord(k)} key={k} text={k}/>))}\n    </div>\n  )\n}\n\nexport default KeypadRow  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAC;EAACC,QAAQ;EAAEC,OAAO;EAAEC;AAAG,CAAC,EAAE;EAE3C,IAAIC,SAAS,GAAIC,CAAC,IAAK;IACrB,OAAOJ,QAAQ,CAACI,CAAC,CAAC,IAAI,MAAM;EAC9B,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EACjCJ,GAAG,CAACK,GAAG,CAAEH,CAAC,IAAMA,CAAC,CAACI,MAAM,KAAK,CAAC,gBAC/BV,OAAA,CAACH,GAAG;MAASS,CAAC,EAAEA,CAAE;MAACK,OAAO,EAAEA,CAAA,KAAMR,OAAO,CAACG,CAAC,CAAE;MAACM,KAAK,EAAEP,SAAS,CAACC,CAAC;IAAE,GAAxDA,CAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwD,CAAC,gBACpEhB,OAAA,CAACF,SAAS;MAACS,SAAS,EAAC,WAAW;MAACI,OAAO,EAAEA,CAAA,KAAMR,OAAO,CAACG,CAAC,CAAE;MAASW,IAAI,EAAEX;IAAE,GAAXA,CAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV;AAACE,EAAA,GAbQjB,SAAS;AAelB,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}